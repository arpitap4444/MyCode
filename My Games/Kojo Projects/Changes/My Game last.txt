class Board {
    clear()
    clearOutput()
    drawStage(black)
    val cb = canvasBounds
    val board = Picture.image("C:/Users/win-10/Desktop/board.png")
    val a = Picture.image("C:/Users/win-10/Desktop/x.png")
    val o = Picture.image("C:/Users/win-10/Desktop/o.png")
    val button0 = Picture {
        setFillColor(cm.rgb(0, 191, 255))
        setPenColor(cm.rgb(0, 191, 255))
        hop(18)
        forward(160)
        right()
        forward(210)
        right()
        forward(160)
        right()
        forward(210)
    }

    val button1 = button0.copy
    val button2 = button0.copy
    val button3 = button0.copy
    val button4 = button0.copy
    val button5 = button0.copy
    val button6 = button0.copy
    val button7 = button0.copy
    val button8 = button0.copy
    board.setPosition(-385, -318)
    a.setPosition(0, 0)
    o.setPosition(0, 0)
    board.scale(3, 2.5)
    button0.setPosition(-370, 125)
    button1.setPosition(-105, 125)
    button2.setPosition(155, 125)
    button3.setPosition(-370, -90)
    button4.setPosition(-106, -90)
    button5.setPosition(156,-90)   
    button6.setPosition(-369,-315)
    button7.setPosition(-106,-315)
    button8.setPosition(156,-315)
    a.scale(3, 2.5)
    o.scale(3, 2.5)
    def draw() {
        board.draw()
        button0.draw()
        button1.draw()
        button2.draw()
        button3.draw()
        button4.draw()
        button5.draw()
        button6.draw()
        button7.draw()
        button8.draw()
    }



    button0.onMouseClick { (x,y) =>
        button0.invisible()
        a.moveToFront()
        
        }
        a.setPosition(-360,140)
        // note `newPic` will be drawn over `pic`. So mouse clicks 
        // within the bounds of `newPic` will not reach `pic`
        



}
val b = new Board
b.draw()
b.a.draw()
